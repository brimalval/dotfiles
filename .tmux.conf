# List of plugins
# set -g @plugin 'catppuccin/tmux'
set -g @plugin 'rose-pine/tmux'
# set -g @plugin 'jimeh/tmux-themepack'

# Manage sessions, windows, panes, etc. with fzf support
set -g @plugin 'sainnhe/tmux-fzf'

# Theme
# set -g @themepack 'powerline/default/purple'
# set -g @catpuccin_flavour 'mocha'
set -g @rose_pine_variant 'main'

# Key binds
set-option -g prefix C-a

set-option -sa terminal-features ',xterm-256color:RGB'

# Set zsh as default
set-option -g default-shell /bin/zsh

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Catpuccin configs
set -g @catppuccin_window_default_text "#W"
set -g @catppuccin_window_current_text "#W"

# Rose pine configs
set -g @rose_pine_window_separator " ⟢ "
set -g @rose_pine_disable_active_window_menu 'on'
set -g @rose_pine_window_status_separator " • " # Changes the default icon that appears between window names

# Add prompt for name of the new window before creating
bind-key c command-prompt -p "Window name:" "new-window; rename-window '%%'"
# set -g default-terminal "tmux-256color"
set -g default-terminal "xterm-256color"

# Add vim bindings to tmux
setw -g mode-keys vi

# FZF key bindings
# bind-key "C-f" run-shell -b "$TMUX_PLUGIN_MANAGER_PATH/tmux-fzf/scripts/session.sh switch"
bind-key "C-f" run-shell -b "~/.config/tmux/scripts/switch-session"
bind "C-o" display-popup -E "tms"

# Put the tmux window on top
set-option -g status-position top

# Auto-hide status bar
bind '\' set -g status
if-shell "[[ $(tmux lsw | wc -l) -le 1 ]]" 'set -g status'
# Hidden by default
set -g status


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
run '~/.tmux/plugins/tpm/tpm'

# tmux.nvim
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?\.?(view|n?vim?x?)(-wrapped)?(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'
