# The following lines were added by compinstall

zstyle ':completion:*' completer _expand _complete _ignored
zstyle ':completion:*' matcher-list 'm:{[:lower:]}={[:upper:]} m:{[:lower:][:upper:]}={[:upper:][:lower:]}' 'r:|[._-]=* r:|=*' '' 'l:|=* r:|=*'
zstyle :compinstall filename '/Users/brian.valencia/.zshrc'

autoload -Uz compinit
compinit -C
# End of lines added by compinstall Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=10000
SAVEHIST=10000
setopt beep extendedglob notify
# End of lines configured by zsh-newuser-install

# Extra path variables
export PATH="/opt/homebrew/bin:$PATH"
export PATH="/usr/local/bin:$PATH"
export PATH="/Users/brian.valencia/Dev/Scripts:$PATH"
# Opt to use pgenv instead
# export PATH="/Library/PostgreSQL/15/bin:$PATH"
export PATH="$HOME/.pgenv/bin:$HOME/.pgenv/pgsql/bin:$PATH"
export PATH="/System/Volumes/Data/Applications/neovide.app/Contents/MacOS:$PATH"

# Starship prompt
eval "$(starship init zsh)"

# Plugins

# Zoxide (quick search directories)
eval "$(zoxide init zsh)"

# Autosuggestions
if [[ ! -d "$HOME/.zsh" ]]; then
  mkdir -p "$HOME/.zsh"
fi

if [[ ! -d "$HOME/.zsh/zsh-autosuggestions" ]]; then
  git clone https://github.com/zsh-users/zsh-autosuggestions "$HOME/.zsh/zsh-autosuggestions"
fi

source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
# Suggest using what autocomplete would put or with historical commands
ZSH_AUTOSUGGEST_STRATEGY=(history completion)

DEV_SCRIPTS_FOLDER="~/Dev/Scripts"

if [[ -d "$DEV_SCRIPTS_FOLDER/pipenv_funcs.sh" ]]; then
  source "$DEV_SCRIPTS_FOLDER/pipenv_funcs.sh"
fi

if [[ -d "$DEV_SCRIPTS_FOLDER/codeartifact_funcs.sh" ]]; then
  source "$DEV_SCRIPTS_FOLDER/codeartifact_funcs.sh"
fi

# End of Plugins

# Use vi keybindings
bindkey -v

# Set nvim as default editor
EDITOR=$(which nvim)

# Quick commands
alias e="clear && $(echo $EDITOR)"
alias nvide="neovide"
alias x="exit"
alias glogol="git log --oneline"
alias tma="tmux attach"
alias gpr="gh pr"
alias gprvw="gh pr view --web"
alias pnpx="pnpm dlx"
alias gyatt="git"
alias gco="git branch | fzf-tmux --prompt 'checkout: ' -w 75% -h 50% --preview 'git log --oneline --color=always {1}' | xargs git checkout"
alias grb="git branch | fzf-tmux --prompt 'rebase onto: ' -w 75% -h 50% --preview 'git log --oneline --color=always {1}' | xargs git rebase"
alias gdel="git branch | fzf-tmux --prompt 'delete: ' -w 75% -h 50% --preview 'git log --oneline --color=always {1}' | xargs git branch -D"
alias lg="lazygit"
alias db="nvim -c :DBUI"

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# bun completions
[ -s "/Users/brian.valencia/.bun/_bun" ] && source "/Users/brian.valencia/.bun/_bun"

# bun
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"

export NVM_DIR="$HOME/.nvm"
  [ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"  # This loads nvm
  [ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion

export DOCKER_DEFAULT_PLATFORM=linux/amd64

# Warpify subshells by default (e.g. from pipenv shell)
# printf '\eP$f{"hook": "SourcedRcFileForWarp", "value": { "shell": "zsh" }}\x9c'

if command -v ngrok &>/dev/null; then
    eval "$(ngrok completion)"
fi
export PATH=$PATH:/Users/brian.valencia/.spicetify

# Enable pyenv
export PYENV_ROOT="$HOME/.pyenv"
[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"

# pnpm
export PNPM_HOME="/Users/brian.valencia/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end

function addSshKeysToAgent() {
  echo "starting ssh agent:"
  echo ""

  eval 'ssh-agent -s'
  echo ""

  echo "adding identities: "
  ssh-add --apple-use-keychain ~/.ssh/personal_rsa
  ssh-add --apple-use-keychain ~/.ssh/work_rsa
  echo ""

  echo "Private keys loaded into SSH: "
  ssh-add -l -E md5
  echo ""

  echo "ssh keys added to ssh agent."
}

# Check if folder has Pipenv
# if [ -f "$(pwd)/Pipfile" ] && [ "$PIPENV_ACTIVE" != 1 ]; then
#   echo "Pipenv detected, activating shell..."
#   pipenv shell
# fi

export MAGICK_HOME=/opt/homebrew/opt/imagemagick/
export PATH="/opt/homebrew/opt/imagemagick/bin:$PATH"
bindkey -M viins "jk" vi-cmd-mode

fastfetch

# If .nvmrc is in current directory, run nvm use
if [ -f .nvmrc ]; then
  nvm use
fi

#  History options
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_FIND_NO_DUPS
setopt HIST_SAVE_NO_DUPS
setopt SHARE_HISTORY
setopt INC_APPEND_HISTORY

# opencode
export PATH=/Users/brian.valencia/.opencode/bin:$PATH

alias claude="/Users/brian.valencia/.claude/local/claude"
